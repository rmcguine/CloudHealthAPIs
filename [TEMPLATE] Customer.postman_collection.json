{
	"info": {
		"_postman_id": "54c29747-ae7c-4d90-8a46-d6e436825df7",
		"name": "[TEMPLATE] Customer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AWS Accounts in CloudHealth",
			"item": [
				{
					"name": "Standard",
					"item": [
						{
							"name": "Enable AWS Account",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": ""
								},
								"description": "Enable an AWS Account in the CloudHealth Platform."
							},
							"response": []
						},
						{
							"name": "AWS Accounts in CloudHealth",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/v1/aws_accounts",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"v1",
										"aws_accounts"
									],
									"query": [
										{
											"key": "page",
											"value": null,
											"description": "Specify the page number for results",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "30",
											"description": "Specify how many results should be displayed per page. Default value is 30. Maximum value is 100.",
											"disabled": true
										},
										{
											"key": null,
											"value": null,
											"disabled": true
										}
									]
								},
								"description": "Get a list of all AWS Accounts that are enabled in the CloudHealth Platform."
							},
							"response": []
						},
						{
							"name": "Single AWS Account",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/v1/aws_accounts/:account_ID",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"v1",
										"aws_accounts",
										":account_ID"
									],
									"variable": [
										{
											"key": "account_ID",
											"value": "{{account_id::Massoud Technologies}}"
										}
									]
								},
								"description": "Get information on a single AWS Account that is enabled in the CloudHealth Platform."
							},
							"response": []
						},
						{
							"name": "Get External ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/v1/aws_accounts/:account_ID/generate_external_id",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"v1",
										"aws_accounts",
										":account_ID",
										"generate_external_id"
									],
									"variable": [
										{
											"key": "account_ID",
											"value": "{{account_id::Massoud Technologies}}"
										}
									]
								},
								"description": "Generate your unique customer External ID so that you can configure an IAM Role in the AWS Console."
							},
							"response": []
						},
						{
							"name": "Update Existing AWS Account",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": ""
								},
								"description": "Update the attributes of an AWS Account that is already enabled in the CloudHealth Platform."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Custom",
					"item": [],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Perspectives",
			"item": [
				{
					"name": "Standard",
					"item": [
						{
							"name": "Retrieve All Perspectives",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/v1/perspective_schemas/",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"v1",
										"perspective_schemas",
										""
									],
									"query": [
										{
											"key": "active_only",
											"value": "false",
											"description": "Boolean that specifies whether only active Perspectives are returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "Retrieve a list of all Perspectives you have created in the CloudHealth Platform."
							},
							"response": []
						},
						{
							"name": "Retrieve Perspective Schema",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/v1/perspective_schemas/:perspective-id",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"v1",
										"perspective_schemas",
										":perspective-id"
									],
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "perspective-id",
											"value": "{{perspective_id::RM-Test}}"
										}
									]
								},
								"description": "Retrieve the schema that defines a specific Perspective. Identify the specific Perspective by its ID."
							},
							"response": []
						},
						{
							"name": "Create Perspective Schema",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "Create a Perspective and associate it with a new schema. The ID of the new Perspective is returned in the message field in the POST response."
							},
							"response": []
						},
						{
							"name": "Update Perspective Schema",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"schema\": {\n        \"name\": \"This is the name of your perspective\",\n        \"include_in_reports\": \"false\",\n        \"rules\": [\n            {\n                \"type\": \"categorize\",\n                \"asset\": \"AwsAsset\",\n                \"tag_field\": [\n                    \"Name\"\n                ],\n                \"ref_id\": \"1\",\n                \"name\": \"Resource Names (AWS Assets)\"\n            },\n            {\n                \"type\": \"categorize\",\n                \"asset\": \"AwsTag\",\n                \"tag_field\": [\n                    \"Name\"\n                ],\n                \"ref_id\": \"2\",\n                \"name\": \"Resource Names (ATA)\"\n            }\n        ],\n        \"merges\": [],\n        \"constants\": []\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/v1/perspective_schemas/:perspective-id",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"v1",
										"perspective_schemas",
										":perspective-id"
									],
									"query": [
										{
											"key": "check_version",
											"value": "3",
											"description": "Number that specifies the version of the Perspective schema that should be updated.",
											"disabled": true
										},
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "perspective-id",
											"value": ""
										}
									]
								},
								"description": "Modify a Perspective based on rules posted through a schema."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Custom",
					"item": [
						{
							"name": "Create Product Perspective",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "Creating a “Product” Perspective allows you to analyze the cost of a feature that is in development through to its production. This enables Finance and the business to determine how much a new feature costs while being developed versus how much the product is making once in production."
							},
							"response": []
						},
						{
							"name": "Create Team Perspective",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "“Team” allows the business to send reports and optimizations based on a team's cost, usage or performance to the various members of the team. This will hold them accountable for their cost, as well as give them visibility into their usage to allow for better optimization and cost savings."
							},
							"response": []
						},
						{
							"name": "Create Owner Perspective",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "In order to hold users accountable for what they are spinning up, “Owner” is a great Perspective to identify which users forgot to spin something down, which ones are using the most resources, and also allows the business to work directly with each owner on their usage to optimize and find savings."
							},
							"response": []
						},
						{
							"name": "Create Environment Perspective",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "A good use case for viewing costs by “Environment” is to determine where you are spending the most (development, staging, production, etc.) and, if it's in production, how this is affecting your cost of goods sold (COGS). Another use case is using environment to dictate what can be analyzed for reservation purchases or what can be used in automated policies for start/stop, unattached volume deletion, and more."
							},
							"response": []
						},
						{
							"name": "Create Organization / BU Perspective",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "Another way to divide reporting based on the teams contributing to cost or usage is “Organization” or “Business Unit.” These Perspectives allow the business to determine which units are spending the most, hold them accountable for savings and optimizations, and direct conversations towards the right group when looking at cost or usage increases. In case your business doesn’t have a tag for organizations or business units, you can use CloudHealth’s Organization Feature to allocate accounts to various organizations for teams to visualize their data separate from other business units."
							},
							"response": []
						},
						{
							"name": "Create Cost Center Perspective",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "",
									"query": [
										{
											"key": "include_version",
											"value": "true",
											"description": "Boolean that defines whether the current version of the perspective is returned in the response.",
											"disabled": true
										}
									]
								},
								"description": "Popular with Finance teams, a “Cost Center” Perspective populates cost or usage reports by an internal cost center for financial and month-end reporting. In some cases, accounts align one-for-one with a cost center, but in other cases, cost center is used as a tag to assign costs from multi-use accounts. This also allows Finance to use the budget feature to track actual cost vs budget throughout the month, and use policies to trigger alerts when cost exceeds these budgets."
							},
							"response": []
						}
					],
					"description": "Step 1: Cast a net that associates untagged assets with their dependent assets, by starting with the resource type “Asset (EC2...).”\n\nStep 2: Switch to “Categorize” instead of “Search” and choose the tag you’d like to allocate resources by.\n\nStep 3: Add these results as a dynamic rule, and then you can go back and categorize the remaining Assets Not Allocated by another tag variation, and by “Amazon Taggable Asset” as the resource type. These multiple categorizations create different dynamic blocks which can be merged together to create one view for reporting.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8479ac98-13eb-4620-9d56-fd65f043ef95",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "767dcab3-751e-4014-95b4-ef49209346a2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "The Perspectives API allows you to manipulate a schema file that defines the rules for grouping assets in a Perspective.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e112898e-a398-4817-9fd0-b389895f8118",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "86fd3ea7-f707-416c-81a2-051bd683cd7d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Reporting",
			"item": [
				{
					"name": "Standard",
					"item": [
						{
							"name": "List of Queryable Reports",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/olap_reports",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"olap_reports"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Reports of Specific Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/olap_reports/:report-type",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"olap_reports",
										":report-type"
									],
									"variable": [
										{
											"key": "report-type",
											"value": "cost"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Data for Standard Report",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/olap_reports/:report-type/:report-id?interval=monthly",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"olap_reports",
										":report-type",
										":report-id"
									],
									"query": [
										{
											"key": "dimensions[]",
											"value": "time",
											"disabled": true
										},
										{
											"key": "measures[]",
											"value": "ec2_cost_compute",
											"disabled": true
										},
										{
											"key": "interval",
											"value": "monthly"
										},
										{
											"key": "filters[]",
											"value": "AWS-Availability-Zones:select:us-east-1a\n  ",
											"disabled": true
										},
										{
											"key": "dimensions[]",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "report-type",
											"value": "{{report-type::cost}}"
										},
										{
											"key": "report-id",
											"value": "{{report-id::history}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Data for Custom Report",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/olap_reports/custom/:report-id",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"olap_reports",
										"custom",
										":report-id"
									],
									"variable": [
										{
											"key": "report-id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Report Dimensions and Measures",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/olap_reports/:report-type/:report-id/new",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"olap_reports",
										":report-type",
										":report-id",
										"new"
									],
									"query": [
										{
											"key": "get-query",
											"value": "true",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "report-type",
											"value": "cost"
										},
										{
											"key": "report-id",
											"value": "history"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Custom",
					"item": [
						{
							"name": "Usage Charges for Assets Not Allocated",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/olap_reports/:report-type/:report-id?dimensions[]=time&measures[]=cost&interval=monthly",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"olap_reports",
										":report-type",
										":report-id"
									],
									"query": [
										{
											"key": "dimensions[]",
											"value": "time"
										},
										{
											"key": "measures[]",
											"value": "cost"
										},
										{
											"key": "interval",
											"value": "monthly"
										},
										{
											"key": "filters[]",
											"value": "AWS-Charge-Type:select:usage,time:select:-1  ",
											"description": "dimension-name:select|reject:member-name,member-name",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "report-type",
											"value": "cost"
										},
										{
											"key": "report-id",
											"value": "history"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "The Reporting API allows REST-based access to data presented in OLAP CloudHealth Reports through this endpoint.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ec424ebd-de9f-4090-a512-37685a35a473",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6fdf93ee-43b8-4c6c-8ffb-ecce0b72b62c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Assets",
			"item": [
				{
					"name": "Standard",
					"item": [
						{
							"name": "List of Queryable Assets",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/api",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"api"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								},
								"description": "Retrieve the API names of all AWS, Azure, Data Center, and Google Cloud asset objects that you can query in the CloudHealth Platform."
							},
							"response": []
						},
						{
							"name": "Attributes of Single Asset",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/api/:asset",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"api",
										":asset"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "asset",
											"value": "AwsS3Bucket"
										}
									]
								},
								"description": "Retrieve the attributes and related assets for a single asset object."
							},
							"response": []
						},
						{
							"name": "Search for Assets",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/api/search?api_version=2&page=1&per_page=5&name=&query=is_active=1&fields=in_use,attr_group__XXXXX,account.name",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"api",
										"search"
									],
									"query": [
										{
											"key": "api_version",
											"value": "2"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "5"
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "query",
											"value": "is_active=1"
										},
										{
											"key": "fields",
											"value": "in_use,attr_group__XXXXX,account.name"
										}
									]
								},
								"description": "Build a search query that retrieves assets that match specific criteria."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Custom",
					"item": [
						{
							"name": "S3 Bucket Attributes",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://chapi.cloudhealthtech.com/api/search?api_version=2 &page=1 &per_page=5 &query=is_active=1\n  &name=AwsInstance\n  &fields=in_use,account.name",
									"protocol": "https",
									"host": [
										"chapi",
										"cloudhealthtech",
										"com"
									],
									"path": [
										"api",
										"search"
									],
									"query": [
										{
											"key": "\n  ",
											"value": null,
											"disabled": true
										},
										{
											"key": "api_version",
											"value": "2 "
										},
										{
											"key": "page",
											"value": "1 "
										},
										{
											"key": "per_page",
											"value": "5 "
										},
										{
											"key": "query",
											"value": "is_active=1\n  "
										},
										{
											"key": "name",
											"value": "AwsInstance\n  "
										},
										{
											"key": "fields",
											"value": "in_use,account.name"
										},
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "The Assets API allows you to retrieve information on AWS, Azure, Data Center, and Google Cloud assets in your environment. The API supports the following operations:\n\nRetrieve the API names of all AWS, Azure, Data Center, and Google Cloud asset objects that you can query in the CloudHealth Platform.\nRetrieve the attributes of an asset, including the Perspective Groups to which the asset belongs, as well as assets related to the queried asset.\nQuery objects of a specific type, filter objects by attribute, and list specific fields of assets in the response.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f4ebdfc7-5b89-4ea2-b39a-b397700f05c6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5ef0f336-c99f-4f5f-8600-594590ae3c17",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Organization",
			"item": [
				{
					"name": "Create Organization",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://chapi.cloudhealthtech.com/v2/organizations?name&description&parent_organization_id",
							"protocol": "https",
							"host": [
								"chapi",
								"cloudhealthtech",
								"com"
							],
							"path": [
								"v2",
								"organizations"
							],
							"query": [
								{
									"key": "name",
									"value": null,
									"description": "{Required} String that specifies the unique name of the new organization."
								},
								{
									"key": "description",
									"value": null,
									"description": "String that specifies a description of the organization."
								},
								{
									"key": "parent_organization_id",
									"value": null,
									"description": "String that specifies the ID of the parent organization. Applies only for organizations in FlexOrgs."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://chapi.cloudhealthtech.com/v2/organizations",
							"protocol": "https",
							"host": [
								"chapi",
								"cloudhealthtech",
								"com"
							],
							"path": [
								"v2",
								"organizations"
							],
							"query": [
								{
									"key": "per_page",
									"value": null,
									"description": "Specify how many results should be displayed per page. Default value is 30. Maximum value is 100.",
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"description": "Specify the page number for results.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Organization Account Assignment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://chapi.cloudhealthtech.com/v2/organizations/:org_id/:cloud_account",
							"protocol": "https",
							"host": [
								"chapi",
								"cloudhealthtech",
								"com"
							],
							"path": [
								"v2",
								"organizations",
								":org_id",
								":cloud_account"
							],
							"variable": [
								{
									"key": "org_id",
									"value": ""
								},
								{
									"key": "cloud_account",
									"value": "{{cloud_account::aws_accounts}}",
									"description": "Specify the cloud account as aws_accounts for AWS, azure_subscriptions for Azure, gcp_compute_projects for GCP, data_center_accounts for Data Center, or vmware_csp_organizations for VMware Cloud."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Allowed Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://chapi.cloudhealthtech.com/v2/organizations/:org_id/available_accounts?type={{cloud_account::aws_accounts}}",
							"protocol": "https",
							"host": [
								"chapi",
								"cloudhealthtech",
								"com"
							],
							"path": [
								"v2",
								"organizations",
								":org_id",
								"available_accounts"
							],
							"query": [
								{
									"key": "type",
									"value": "{{cloud_account::aws_accounts}}",
									"description": "{Required} Specify the cloud account type as aws_accounts for AWS, azure_subscriptions for Azure, gcp_compute_projects for GCP, data_center_accounts for Data Center, or vmware_csp_organizations for VMware Cloud."
								}
							],
							"variable": [
								{
									"key": "org_id",
									"value": "{{org_id::Smidget's Widgets II}}",
									"description": "{Required}"
								}
							]
						},
						"description": "Retrieve a list of all accounts that can be assigned to the organization. If your organization is in FlexOrgs, then only accounts assigned to the organization’s parent organizations are retrieved."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Azure Service Principals",
			"item": [
				{
					"name": "Get All Existing Service Principals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://chapi.cloudhealthtech.com/v1/azure_service_principals",
							"protocol": "https",
							"host": [
								"chapi",
								"cloudhealthtech",
								"com"
							],
							"path": [
								"v1",
								"azure_service_principals"
							]
						},
						"description": "Retrieve a list of all service principals."
					},
					"response": []
				},
				{
					"name": "Details of Service Principal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://chapi.cloudhealthtech.com/v1/azure_service_principals/:sp_id",
							"protocol": "https",
							"host": [
								"chapi",
								"cloudhealthtech",
								"com"
							],
							"path": [
								"v1",
								"azure_service_principals",
								":sp_id"
							],
							"variable": [
								{
									"key": "sp_id",
									"value": ""
								}
							]
						},
						"description": "Get details for a specific service principal."
					},
					"response": []
				}
			],
			"description": "The Azure service principal defines the access an application such as CloudHealth has to your Azure Portal data. Use this API to connect an Azure service principal to the CloudHealth Platform.",
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "bc197945-5bca-423e-9af0-7e9d873c2fd3",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1f60809b-d9c3-4fbd-8e18-d6df3c6ffbbe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "93bf1959-95d5-4044-8adc-8b5cdec74824",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}